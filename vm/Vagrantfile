# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"
MASTER_IP = "192.168.0.2"
SALT_ROOT = "/srv/salt"

# 1. Comment all config.vm lines
# 2. vagrant up
# 3. vagrant halt
# 4. Uncomment ssh.username
# 5. vagrant up --provision

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "berendt/opensuse-13.2-x86_64"

  config.vm.synced_folder "../src/user/test", "/test"
  config.vm.synced_folder "../bin", "/module"
  config.vm.synced_folder "salt/states", SALT_ROOT

  config.ssh.username = 'root'
#  config.ssh.password = 'root'
#  config.ssh.private_key_path = '~/.ssh/id_rsa'
#  config.ssh.insert_key = 'true'
#  config.ssh.insert_key = 'false'
  # config.ssh.pty = 'true'

  # config.vm.network "private_network", type: "dhcp"
  config.vm.network "private_network", ip: MASTER_IP

  config.vm.provision :shell, inline: '
#	  echo "export TERM=vt100" > /etc/profile.d/term.sh
#	  sed -i "s/#file_client.*/file_client: local/g" /etc/salt/minion
	  sudo rsync -a /home/vagrant/.ssh/ /root/.ssh
	  sudo chown root -R /root/.ssh
  '

  config.vm.provision :salt do |salt|
#	  salt.run_highstate = true
	  salt.minion_key = "salt/key/minion.pem"
	  salt.minion_pub = "salt/key/minion.pub"
	  salt.master_key = "salt/key/master.pem"
	  salt.master_pub = "salt/key/master.pub"
	  salt.bootstrap_options = " -A " + MASTER_IP + " -i " + "minion"
	  salt.install_master = true
	  salt.seed_master = {minion: salt.minion_pub}
      salt.bootstrap_script = "salt/bootstrap.sh"
	  salt.verbose = true
  end
  config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: SALT_ROOT + "/sshkey/host_id_rsa.pub"
  config.vm.provision "file", source: "../src/user/completions/salt_common.fish", destination: "/usr/share/fish/completions/salt_common.fish"
  config.vm.provision "file", source: "../src/user/completions/saltfs.fish", destination: "/usr/share/fish/completions/saltfs.fish"
  config.vm.provision "shell", inline: "sudo salt-call state.highstate"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  # config.ssh.forward_agent = true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Don't boot with headless mode
  #   vb.gui = true
  #
  #   # Use VBoxManage to customize the VM. For example to change memory:
  #   vb.customize ["modifyvm", :id, "--memory", "1024"]
  # end
  #
  # View the documentation for the provider you're using for more
  # information on available options.
end
